import{f as b,r as i,g as N,j as n,P as y,h as v,i as h,k as me,l as ve,n as xe,F as Ae,D as Ne,o as ye,p as Re,q as _e,s as C,t as Ce,v as he,R as A,w as f,x as O}from"./index-c6f04137.js";var _="Dialog",[T,w]=b(_),[Ee,g]=T(_),I=e=>{const{__scopeDialog:t,children:o,open:a,defaultOpen:r,onOpenChange:s,modal:l=!0}=e,c=i.useRef(null),u=i.useRef(null),[d,m]=_e({prop:a,defaultProp:r??!1,onChange:s,caller:_});return n.jsx(Ee,{scope:t,triggerRef:c,contentRef:u,contentId:C(),titleId:C(),descriptionId:C(),open:d,onOpenChange:m,onOpenToggle:i.useCallback(()=>m(De=>!De),[m]),modal:l,children:o})};I.displayName=_;var S="DialogTrigger",M=i.forwardRef((e,t)=>{const{__scopeDialog:o,...a}=e,r=g(S,o),s=N(t,r.triggerRef);return n.jsx(y.button,{type:"button","aria-haspopup":"dialog","aria-expanded":r.open,"aria-controls":r.contentId,"data-state":j(r.open),...a,ref:s,onClick:v(e.onClick,r.onOpenToggle)})});M.displayName=S;var E="DialogPortal",[Pe,$]=T(E,{forceMount:void 0}),F=e=>{const{__scopeDialog:t,forceMount:o,children:a,container:r}=e,s=g(E,t);return n.jsx(Pe,{scope:t,forceMount:o,children:i.Children.map(a,l=>n.jsx(h,{present:o||s.open,children:n.jsx(Ce,{asChild:!0,container:r,children:l})}))})};F.displayName=E;var R="DialogOverlay",W=i.forwardRef((e,t)=>{const o=$(R,e.__scopeDialog),{forceMount:a=o.forceMount,...r}=e,s=g(R,e.__scopeDialog);return s.modal?n.jsx(h,{present:a||s.open,children:n.jsx(be,{...r,ref:t})}):null});W.displayName=R;var je=Re("DialogOverlay.RemoveScroll"),be=i.forwardRef((e,t)=>{const{__scopeDialog:o,...a}=e,r=g(R,o);return n.jsx(me,{as:je,allowPinchZoom:!0,shards:[r.contentRef],children:n.jsx(y.div,{"data-state":j(r.open),...a,ref:t,style:{pointerEvents:"auto",...a.style}})})}),D="DialogContent",k=i.forwardRef((e,t)=>{const o=$(D,e.__scopeDialog),{forceMount:a=o.forceMount,...r}=e,s=g(D,e.__scopeDialog);return n.jsx(h,{present:a||s.open,children:s.modal?n.jsx(Oe,{...r,ref:t}):n.jsx(Te,{...r,ref:t})})});k.displayName=D;var Oe=i.forwardRef((e,t)=>{const o=g(D,e.__scopeDialog),a=i.useRef(null),r=N(t,o.contentRef,a);return i.useEffect(()=>{const s=a.current;if(s)return ve(s)},[]),n.jsx(L,{...e,ref:r,trapFocus:o.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:v(e.onCloseAutoFocus,s=>{var l;s.preventDefault(),(l=o.triggerRef.current)==null||l.focus()}),onPointerDownOutside:v(e.onPointerDownOutside,s=>{const l=s.detail.originalEvent,c=l.button===0&&l.ctrlKey===!0;(l.button===2||c)&&s.preventDefault()}),onFocusOutside:v(e.onFocusOutside,s=>s.preventDefault())})}),Te=i.forwardRef((e,t)=>{const o=g(D,e.__scopeDialog),a=i.useRef(!1),r=i.useRef(!1);return n.jsx(L,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:s=>{var l,c;(l=e.onCloseAutoFocus)==null||l.call(e,s),s.defaultPrevented||(a.current||(c=o.triggerRef.current)==null||c.focus(),s.preventDefault()),a.current=!1,r.current=!1},onInteractOutside:s=>{var u,d;(u=e.onInteractOutside)==null||u.call(e,s),s.defaultPrevented||(a.current=!0,s.detail.originalEvent.type==="pointerdown"&&(r.current=!0));const l=s.target;((d=o.triggerRef.current)==null?void 0:d.contains(l))&&s.preventDefault(),s.detail.originalEvent.type==="focusin"&&r.current&&s.preventDefault()}})}),L=i.forwardRef((e,t)=>{const{__scopeDialog:o,trapFocus:a,onOpenAutoFocus:r,onCloseAutoFocus:s,...l}=e,c=g(D,o),u=i.useRef(null),d=N(t,u);return xe(),n.jsxs(n.Fragment,{children:[n.jsx(Ae,{asChild:!0,loop:!0,trapped:a,onMountAutoFocus:r,onUnmountAutoFocus:s,children:n.jsx(Ne,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":j(c.open),...l,ref:d,onDismiss:()=>c.onOpenChange(!1)})}),n.jsxs(n.Fragment,{children:[n.jsx(Ie,{titleId:c.titleId}),n.jsx(Me,{contentRef:u,descriptionId:c.descriptionId})]})]})}),P="DialogTitle",G=i.forwardRef((e,t)=>{const{__scopeDialog:o,...a}=e,r=g(P,o);return n.jsx(y.h2,{id:r.titleId,...a,ref:t})});G.displayName=P;var z="DialogDescription",B=i.forwardRef((e,t)=>{const{__scopeDialog:o,...a}=e,r=g(z,o);return n.jsx(y.p,{id:r.descriptionId,...a,ref:t})});B.displayName=z;var H="DialogClose",V=i.forwardRef((e,t)=>{const{__scopeDialog:o,...a}=e,r=g(H,o);return n.jsx(y.button,{type:"button",...a,ref:t,onClick:v(e.onClick,()=>r.onOpenChange(!1))})});V.displayName=H;function j(e){return e?"open":"closed"}var q="DialogTitleWarning",[we,Y]=ye(q,{contentName:D,titleName:P,docsSlug:"dialog"}),Ie=({titleId:e})=>{const t=Y(q),o=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return i.useEffect(()=>{e&&(document.getElementById(e)||console.error(o))},[o,e]),null},Se="DialogDescriptionWarning",Me=({contentRef:e,descriptionId:t})=>{const a=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${Y(Se).contentName}}.`;return i.useEffect(()=>{var s;const r=(s=e.current)==null?void 0:s.getAttribute("aria-describedby");t&&r&&(document.getElementById(t)||console.warn(a))},[a,e,t]),null},$e=I,Fe=M,We=F,ke=W,Le=k,Ge=G,ze=B,K=V,U="AlertDialog",[Be,dt]=b(U,[w]),p=w(),Z=e=>{const{__scopeAlertDialog:t,...o}=e,a=p(t);return n.jsx($e,{...a,...o,modal:!0})};Z.displayName=U;var He="AlertDialogTrigger",J=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...a}=e,r=p(o);return n.jsx(Fe,{...r,...a,ref:t})});J.displayName=He;var Ve="AlertDialogPortal",Q=e=>{const{__scopeAlertDialog:t,...o}=e,a=p(t);return n.jsx(We,{...a,...o})};Q.displayName=Ve;var qe="AlertDialogOverlay",X=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...a}=e,r=p(o);return n.jsx(ke,{...r,...a,ref:t})});X.displayName=qe;var x="AlertDialogContent",[Ye,Ke]=Be(x),Ue=he("AlertDialogContent"),ee=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,children:a,...r}=e,s=p(o),l=i.useRef(null),c=N(t,l),u=i.useRef(null);return n.jsx(we,{contentName:x,titleName:te,docsSlug:"alert-dialog",children:n.jsx(Ye,{scope:o,cancelRef:u,children:n.jsxs(Le,{role:"alertdialog",...s,...r,ref:c,onOpenAutoFocus:v(r.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=u.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[n.jsx(Ue,{children:a}),n.jsx(Je,{contentRef:l})]})})})});ee.displayName=x;var te="AlertDialogTitle",oe=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...a}=e,r=p(o);return n.jsx(Ge,{...r,...a,ref:t})});oe.displayName=te;var ae="AlertDialogDescription",re=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...a}=e,r=p(o);return n.jsx(ze,{...r,...a,ref:t})});re.displayName=ae;var Ze="AlertDialogAction",ne=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...a}=e,r=p(o);return n.jsx(K,{...r,...a,ref:t})});ne.displayName=Ze;var se="AlertDialogCancel",ie=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...a}=e,{cancelRef:r}=Ke(se,o),s=p(o),l=N(t,r);return n.jsx(K,{...s,...a,ref:l})});ie.displayName=se;var Je=({contentRef:e})=>{const t=`\`${x}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${x}\` by passing a \`${ae}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${x}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return i.useEffect(()=>{var a;document.getElementById((a=e.current)==null?void 0:a.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},Qe=Z,Xe=J,et=Q,le=X,ce=ee,de=ne,ue=ie,ge=oe,pe=re;const ut=Qe,gt=Xe,tt=et,fe=A.forwardRef(({className:e,...t},o)=>n.jsx(le,{className:f("fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:o}));fe.displayName=le.displayName;const ot=A.forwardRef(({className:e,...t},o)=>n.jsxs(tt,{children:[n.jsx(fe,{}),n.jsx(ce,{ref:o,className:f("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg","glassmorphic",e),...t})]}));ot.displayName=ce.displayName;const at=({className:e,...t})=>n.jsx("div",{className:f("flex flex-col space-y-2 text-center sm:text-left",e),...t});at.displayName="AlertDialogHeader";const rt=({className:e,...t})=>n.jsx("div",{className:f("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t});rt.displayName="AlertDialogFooter";const nt=A.forwardRef(({className:e,...t},o)=>n.jsx(ge,{ref:o,className:f("text-lg font-semibold",e),...t}));nt.displayName=ge.displayName;const st=A.forwardRef(({className:e,...t},o)=>n.jsx(pe,{ref:o,className:f("text-sm text-muted-foreground",e),...t}));st.displayName=pe.displayName;const it=A.forwardRef(({className:e,...t},o)=>n.jsx(de,{ref:o,className:f(O(),e),...t}));it.displayName=de.displayName;const lt=A.forwardRef(({className:e,...t},o)=>n.jsx(ue,{ref:o,className:f(O({variant:"outline"}),"mt-2 sm:mt-0",e),...t}));lt.displayName=ue.displayName;export{ut as A,gt as a,ot as b,at as c,nt as d,st as e,rt as f,lt as g,it as h};
